<!DOCTYPE html>
<html lang="bn">
<head>
<meta charset="UTF-8">
<title>ЁЯдЦ ржЧржгрж┐рждржорж┐рждрзНрж░ AI - рж╕рзНржорж╛рж░рзНржЯ ржЧржгрж┐ржд рж╕ржорж╛ржзрж╛ржиржХрж╛рж░рзА</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<script src="https://cdn.tailwindcss.com"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
<style>
    @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+Bengali:wght@400;500;600;700&display=swap');

    body {
        font-family: 'Noto Sans Bengali', sans-serif;
        background: #f8fafc;
        min-height: 100vh;
    }

    .card {
        background: white;
        border: 1px solid #e2e8f0;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }



    .btn-primary {
        background: #3b82f6;
        transition: all 0.2s ease;
    }

    .btn-primary:hover {
        background: #2563eb;
    }

    .example-btn {
        transition: all 0.2s ease;
    }

    .example-btn:hover {
        background: #f1f5f9;
        border-color: #3b82f6;
    }

    .loading-spinner {
        border: 2px solid #f3f4f6;
        border-top: 2px solid #3b82f6;
        border-radius: 50%;
        width: 16px;
        height: 16px;
        animation: spin 1s linear infinite;
        display: inline-block;
        margin-right: 8px;
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
</style>
</head>
<body class="p-6">
<div class="max-w-2xl mx-auto">
    <!-- Header Section -->
    <div class="card rounded-lg p-6 text-center mb-8">
        <h1 class="text-2xl font-bold text-gray-900 mb-2">ржЧржгрж┐рждржорж┐рждрзНрж░ AI</h1>
        <p class="text-gray-600 mb-2">ржкрзНрж░рж╛ржержорж┐ржХ рж╢рзНрж░рзЗржгрзАрж░ рж╕рж╣ржЬ ржЧржгрж┐рждрзЗрж░ рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржирзЗрж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ржнрж╛ржмрзЗ рждрзИрж░рж┐</p>
        <p class="text-sm text-blue-600 mb-2">рж╕рзНржорж╛рж░рзНржЯ ржХрзГрждрзНрж░рж┐ржо ржмрзБржжрзНржзрж┐ржорждрзНрждрж╛ ржжрж┐ржпрж╝рзЗ ржЧржгрж┐рждрзЗрж░ рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржи</p>
        <p class="text-sm text-gray-500 mb-6">ржорзЗрж╢рж┐ржи рж▓рж╛рж░рзНржирж┐ржВ ржоржбрзЗрж▓ | рззрзжрзж% ржирж┐рж░рзНржнрзБрж▓рждрж╛ | рзнрзлрзж+ рж╕ржорж╕рзНржпрж╛ржпрж╝ ржкрзНрж░рж╢рж┐ржХрзНрж╖рж┐ржд</p>

        <!-- Credits -->
        <div class="flex items-center justify-center gap-3">
            <a href="https://github.com/arafathossainar/ganitmitraAI" target="_blank"
               class="flex items-center px-3 py-1.5 bg-gray-900 hover:bg-gray-800 text-white text-xs rounded-md transition-colors">
            <i class="fab fa-github mr-1.5"></i>
            Source
            </a>
            <a href="https://github.com/arafathossainar" target="_blank"
               class="flex items-center px-3 py-1.5 bg-blue-600 hover:bg-blue-700 text-white text-xs rounded-md transition-colors">
            <i class="fas fa-user mr-1.5"></i>
            Profile
            </a>
        </div>
    </div>

    <!-- Main Input Section -->
    <div class="card rounded-lg p-6 mb-2">
        <div class="mb-4">
            <label class="block text-sm font-medium text-gray-700 mb-2">ржЧржгрж┐рждрзЗрж░ рж╕ржорж╕рзНржпрж╛ рж▓рж┐ржЦрзБржи:</label>
            <textarea
                id="problem"
                rows="3"
                class="w-full p-3 border border-gray-300 rounded-md outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500 resize-none"
                placeholder="ржЙржжрж╛рж╣рж░ржг: рж░рж╛рж╣рж┐ржорзЗрж░ ржХрж╛ржЫрзЗ рзлржЯрж┐ ржЖржо ржЖржЫрзЗред ржХрж░рж┐ржо рждрж╛ржХрзЗ рзйржЯрж┐ ржЖржо ржжрж┐рж▓ред ржПржЦржи рждрж╛рж░ ржХрж╛ржЫрзЗ ржХрждржЯрж┐ ржЖржо?"
            ></textarea>
        </div>

        <button
            id="solveBtn"
            class="btn-primary w-full text-white p-3 rounded-md font-medium">
            рж╕ржорж╛ржзрж╛ржи ржХрж░рзБржи
        </button>
    </div>
    <!-- Result Section -->
    <div id="result" class="card rounded-lg p-6 hidden"></div>

    <!-- Examples Section -->
    <div id="initialExamples" class="card rounded-lg p-6 mt-6">
        <h3 class="text-lg font-medium text-gray-800 mb-4">ржЙржжрж╛рж╣рж░ржг рж╕ржорж╕рзНржпрж╛ (ржХрзНрж▓рж┐ржХ ржХрж░рзБржи):</h3>
        <div class="space-y-3">
            <div class="example-btn p-3 bg-gray-50 rounded-md cursor-pointer text-sm border border-gray-200" onclick="setExample('рж░рж╛рж╣рж┐ржорзЗрж░ ржХрж╛ржЫрзЗ рзлржЯрж┐ ржЖржо ржЖржЫрзЗред ржХрж░рж┐ржо рждрж╛ржХрзЗ рзйржЯрж┐ ржЖржо ржжрж┐рж▓ред ржПржЦржи рждрж╛рж░ ржХрж╛ржЫрзЗ ржХрждржЯрж┐ ржЖржо?')">
                рж░рж╛рж╣рж┐ржорзЗрж░ ржХрж╛ржЫрзЗ рзлржЯрж┐ ржЖржо ржЖржЫрзЗред ржХрж░рж┐ржо рждрж╛ржХрзЗ рзйржЯрж┐ ржЖржо ржжрж┐рж▓ред ржПржЦржи рждрж╛рж░ ржХрж╛ржЫрзЗ ржХрждржЯрж┐ ржЖржо?
            </div>
            <div class="example-btn p-3 bg-gray-50 rounded-md cursor-pointer text-sm border border-gray-200" onclick="setExample('ржорж┐рждрж╛ рззрзиржЯрж┐ ржХрж▓ржо ржХрж┐ржирж▓ред рж╕рзЗ рзкржЯрж┐ ржХрж▓ржо рждрж╛рж░ ржнрж╛ржЗржХрзЗ ржжрж┐рж▓ред ржПржЦржи ржорж┐рждрж╛рж░ ржХрж╛ржЫрзЗ ржХрждржЯрж┐ ржХрж▓ржо ржЖржЫрзЗ?')">
                ржорж┐рждрж╛ рззрзиржЯрж┐ ржХрж▓ржо ржХрж┐ржирж▓ред рж╕рзЗ рзкржЯрж┐ ржХрж▓ржо рждрж╛рж░ ржнрж╛ржЗржХрзЗ ржжрж┐рж▓ред ржПржЦржи ржорж┐рждрж╛рж░ ржХрж╛ржЫрзЗ ржХрждржЯрж┐ ржХрж▓ржо ржЖржЫрзЗ?
            </div>
            <div class="example-btn p-3 bg-gray-50 rounded-md cursor-pointer text-sm border border-gray-200" onclick="setExample('ржПржХржЯрж┐ ржЭрзБржбрж╝рж┐рждрзЗ рзмржЯрж┐ ржЖржкрзЗрж▓ ржЖржЫрзЗред рзкржЯрж┐ ржЭрзБржбрж╝рж┐рждрзЗ ржорзЛржЯ ржХрждржЯрж┐ ржЖржкрзЗрж▓ ржЖржЫрзЗ?')">
                ржПржХржЯрж┐ ржЭрзБржбрж╝рж┐рждрзЗ рзмржЯрж┐ ржЖржкрзЗрж▓ ржЖржЫрзЗред рзкржЯрж┐ ржЭрзБржбрж╝рж┐рждрзЗ ржорзЛржЯ ржХрждржЯрж┐ ржЖржкрзЗрж▓ ржЖржЫрзЗ?
            </div>
            <div class="example-btn p-3 bg-gray-50 rounded-md cursor-pointer text-sm border border-gray-200" onclick="setExample('рзирзжржЯрж┐ ржЖржо рзл ржЬржирзЗрж░ ржоржзрзНржпрзЗ ржнрж╛ржЧ ржХрж░рж╛ рж╣рж▓рзЛред ржкрзНрж░рждрзНржпрзЗржХрзЗ ржХрждржЯрж┐ ржЖржо ржкрж╛ржмрзЗ?')">
                рзирзжржЯрж┐ ржЖржо рзл ржЬржирзЗрж░ ржоржзрзНржпрзЗ ржнрж╛ржЧ ржХрж░рж╛ рж╣рж▓рзЛред ржкрзНрж░рждрзНржпрзЗржХрзЗ ржХрждржЯрж┐ ржЖржо ржкрж╛ржмрзЗ?
            </div>
        </div>
    </div>

    <!-- Contextual Examples Section (Initially Hidden) -->
    <div id="examples" class="card rounded-lg p-6 mt-6 hidden">
        <h3 class="text-lg font-medium text-gray-800 mb-4">ржЖрж░рзЛ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи:</h3>
        <div id="examplesList" class="space-y-3">
            <!-- Examples will be dynamically inserted here -->
        </div>
    </div>
            <!-- Developer Info -->
        <div class="text-center mt-3">
            <p class="text-sm text-gray-600">
                Developed by <span class="font-medium text-blue-600">Arafat Hossain Ar</span>
            </p>
        </div>
</div>

<script>
// All examples organized by type for contextual suggestions
const allExamples = {
    // Addition examples
    add: [
        'рж░рж╛рж╣рж┐ржорзЗрж░ ржХрж╛ржЫрзЗ рзлржЯрж┐ ржЖржо ржЖржЫрзЗред ржХрж░рж┐ржо рждрж╛ржХрзЗ рзйржЯрж┐ ржЖржо ржжрж┐рж▓ред ржПржЦржи рждрж╛рж░ ржХрж╛ржЫрзЗ ржХрждржЯрж┐ ржЖржо?',
        'рж╕рж╛рж░рж╛рж░ ржХрж╛ржЫрзЗ рззрзл ржЯрж╛ржХрж╛ ржЖржЫрзЗред ржорж╛ рждрж╛ржХрзЗ ржЖрж░рзЛ рзирзл ржЯрж╛ржХрж╛ ржжрж┐рж▓ред ржПржЦржи рждрж╛рж░ ржХрж╛ржЫрзЗ ржХржд ржЯрж╛ржХрж╛?',
        'ржПржХржЯрж┐ ржЭрзБржбрж╝рж┐рждрзЗ рззрзиржЯрж┐ ржХржорж▓рж╛ ржЖржЫрзЗред ржЖрж░рзЛ рзоржЯрж┐ ржХржорж▓рж╛ рж░рж╛ржЦрж╛ рж╣рж▓рзЛред ржПржЦржи ржорзЛржЯ ржХрждржЯрж┐ ржХржорж▓рж╛?'
    ],
    // Subtraction examples
    subtract: [
        'ржорж┐рждрж╛ рззрзиржЯрж┐ ржХрж▓ржо ржХрж┐ржирж▓ред рж╕рзЗ рзкржЯрж┐ ржХрж▓ржо рждрж╛рж░ ржнрж╛ржЗржХрзЗ ржжрж┐рж▓ред ржПржЦржи ржорж┐рждрж╛рж░ ржХрж╛ржЫрзЗ ржХрждржЯрж┐ ржХрж▓ржо ржЖржЫрзЗ?',
        'рж░ржирж┐рж░ ржХрж╛ржЫрзЗ рзлрзж ржЯрж╛ржХрж╛ ржЫрж┐рж▓ред рж╕рзЗ рзирзж ржЯрж╛ржХрж╛ ржЦрж░ржЪ ржХрж░рж▓ред ржПржЦржи рждрж╛рж░ ржХрж╛ржЫрзЗ ржХржд ржЯрж╛ржХрж╛ ржЖржЫрзЗ?',
        'ржПржХржЯрж┐ ржмрж╛ржЧрж╛ржирзЗ рзирзлржЯрж┐ ржЧрзЛрж▓рж╛ржк ржЫрж┐рж▓ред рззрзжржЯрж┐ ржЭржбрж╝рзЗ ржирж╖рзНржЯ рж╣рж▓рзЛред ржПржЦржи ржХрждржЯрж┐ ржЧрзЛрж▓рж╛ржк ржЖржЫрзЗ?'
    ],
    // Multiplication examples
    multiply: [
        'ржПржХржЯрж┐ ржЭрзБржбрж╝рж┐рждрзЗ рзмржЯрж┐ ржЖржкрзЗрж▓ ржЖржЫрзЗред рзкржЯрж┐ ржЭрзБржбрж╝рж┐рждрзЗ ржорзЛржЯ ржХрждржЯрж┐ ржЖржкрзЗрж▓ ржЖржЫрзЗ?',
        'ржкрзНрж░рждрж┐ржжрж┐ржи рзнржЯрж┐ ржХрж░рзЗ ржмржЗ ржкржбрж╝рж╛ рж╣ржпрж╝ред рзл ржжрж┐ржирзЗ ржорзЛржЯ ржХрждржЯрж┐ ржмржЗ ржкржбрж╝рж╛ рж╣ржмрзЗ?',
        'ржПржХржЯрж┐ ржмрж╛ржХрзНрж╕рзЗ рззрзиржЯрж┐ ржЪржХрж▓рзЗржЯ ржЖржЫрзЗред рзйржЯрж┐ ржмрж╛ржХрзНрж╕рзЗ ржорзЛржЯ ржХрждржЯрж┐ ржЪржХрж▓рзЗржЯ?'
    ],
    // Division examples
    divide: [
        'рзирзжржЯрж┐ ржЖржо рзл ржЬржирзЗрж░ ржоржзрзНржпрзЗ ржнрж╛ржЧ ржХрж░рж╛ рж╣рж▓рзЛред ржкрзНрж░рждрзНржпрзЗржХрзЗ ржХрждржЯрж┐ ржЖржо ржкрж╛ржмрзЗ?',
        'рзйрзмржЯрж┐ ржмржЗ рзмржЯрж┐ рждрж╛ржХрзЗ рж╕ржорж╛ржиржнрж╛ржмрзЗ рж╕рж╛ржЬрж╛ржирзЛ рж╣рж▓рзЛред ржкрзНрж░рждрж┐ржЯрж┐ рждрж╛ржХрзЗ ржХрждржЯрж┐ ржмржЗ?',
        'рзорззржЯрж┐ ржкрзЗржирзНрж╕рж┐рж▓ рзп ржЬржи ржЫрж╛рждрзНрж░рзЗрж░ ржоржзрзНржпрзЗ ржнрж╛ржЧ ржХрж░рж╛ рж╣рж▓рзЛред ржкрзНрж░рждрзНржпрзЗржХрзЗ ржХрждржЯрж┐ ржкрзЗржирзНрж╕рж┐рж▓ ржкрж╛ржмрзЗ?'
    ],
    // Mixed examples
    mixed: [
        'ржПржХржЯрж┐ ржЯрзНрж░рж╛ржХ рзп ржХрж┐ржорж┐ ржкрзНрж░рждрж┐ рж▓рж┐ржЯрж╛рж░ ржЧрзНржпрж╛рж╕ ржЦрж╛ржпрж╝ред ржЯрзНрж░рж╛ржХ рзлрзк ржХрж┐ржорж┐ ржпрж╛ржмрзЗред ржХржд рж▓рж┐ржЯрж╛рж░ ржЧрзНржпрж╛рж╕ рж▓рж╛ржЧржмрзЗ?',
        'рж░рзБржмрж┐рж░ ржХрж╛ржЫрзЗ рззрзл ржЯрж╛ржХрж╛ ржЖржЫрзЗред рж╕рзЗ рзн ржЯрж╛ржХрж╛ ржЦрж░ржЪ ржХрж░рж▓, ржкрж░рзЗ рзй ржЯрж╛ржХрж╛ ржкрзЗрж▓ред ржПржЦржи рждрж╛рж░ ржХрж╛ржЫрзЗ ржХржд ржЯрж╛ржХрж╛?'
    ]
};

// Map problems to their types
const problemTypes = {
    'рж░рж╛рж╣рж┐ржорзЗрж░ ржХрж╛ржЫрзЗ рзлржЯрж┐ ржЖржо ржЖржЫрзЗред ржХрж░рж┐ржо рждрж╛ржХрзЗ рзйржЯрж┐ ржЖржо ржжрж┐рж▓ред ржПржЦржи рждрж╛рж░ ржХрж╛ржЫрзЗ ржХрждржЯрж┐ ржЖржо?': 'add',
    'ржорж┐рждрж╛ рззрзиржЯрж┐ ржХрж▓ржо ржХрж┐ржирж▓ред рж╕рзЗ рзкржЯрж┐ ржХрж▓ржо рждрж╛рж░ ржнрж╛ржЗржХрзЗ ржжрж┐рж▓ред ржПржЦржи ржорж┐рждрж╛рж░ ржХрж╛ржЫрзЗ ржХрждржЯрж┐ ржХрж▓ржо ржЖржЫрзЗ?': 'subtract',
    'ржПржХржЯрж┐ ржЭрзБржбрж╝рж┐рждрзЗ рзмржЯрж┐ ржЖржкрзЗрж▓ ржЖржЫрзЗред рзкржЯрж┐ ржЭрзБржбрж╝рж┐рждрзЗ ржорзЛржЯ ржХрждржЯрж┐ ржЖржкрзЗрж▓ ржЖржЫрзЗ?': 'multiply',
    'рзирзжржЯрж┐ ржЖржо рзл ржЬржирзЗрж░ ржоржзрзНржпрзЗ ржнрж╛ржЧ ржХрж░рж╛ рж╣рж▓рзЛред ржкрзНрж░рждрзНржпрзЗржХрзЗ ржХрждржЯрж┐ ржЖржо ржкрж╛ржмрзЗ?': 'divide'
};

// Set example problem function
function setExample(problemText) {
    document.getElementById('problem').value = problemText;
    document.getElementById('problem').focus();

    // Hide initial examples section after first use
    const initialExamplesDiv = document.getElementById('initialExamples');
    if (initialExamplesDiv) {
        // initialExamplesDiv.style.display = 'none';
    }

    // Add visual feedback
    const textarea = document.getElementById('problem');
    textarea.style.borderColor = '#4f46e5';
    textarea.style.boxShadow = '0 0 0 3px rgba(79, 70, 229, 0.1)';

    setTimeout(() => {
        textarea.style.borderColor = '';
        textarea.style.boxShadow = '';
    }, 1000);
}

// Show contextual examples after solving
function showContextualExamples(currentProblem) {
    const examplesDiv = document.getElementById('examples');
    const examplesList = document.getElementById('examplesList');

    // Determine the type of current problem
    const currentType = problemTypes[currentProblem.trim()];

    let examples = [];

    if (currentType) {
        // If it's a known example problem, show related examples of the same type
        examples = allExamples[currentType].filter(ex => ex !== currentProblem.trim());

        // If we need more examples, add from other types
        if (examples.length < 3) {
            const otherTypes = Object.keys(allExamples).filter(type => type !== currentType);
            for (let type of otherTypes) {
                if (examples.length >= 3) break;
                const otherExamples = allExamples[type].filter(ex => ex !== currentProblem.trim());
                examples = examples.concat(otherExamples.slice(0, 3 - examples.length));
            }
        }
    } else {
        // For custom problems, show mixed examples
        const allPossibleExamples = Object.values(allExamples).flat();
        examples = allPossibleExamples.filter(ex => ex !== currentProblem.trim()).slice(0, 3);
    }

    let html = '';
    examples.forEach(example => {
        html += `
            <div class="example-btn p-3 bg-gray-50 rounded-md cursor-pointer text-sm border border-gray-200" onclick="setExample('${example}')">
                ${example}
            </div>
        `;
    });

    examplesList.innerHTML = html;
    examplesDiv.classList.remove('hidden');
}

// Enhanced solve function with animations
document.getElementById('solveBtn').addEventListener('click', function() {
    solveProblem();
});

// Allow Enter key to solve (with Ctrl+Enter for newline)
document.getElementById('problem').addEventListener('keydown', function(e) {
    if (e.key === 'Enter' && !e.ctrlKey && !e.shiftKey) {
        e.preventDefault();
        solveProblem();
    }
});

function solveProblem() {
    let problem = document.getElementById('problem').value;
    if(problem.trim() === '') {
        alert('ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржПржХржЯрж┐ ржЧржгрж┐рждрзЗрж░ рж╕ржорж╕рзНржпрж╛ рж▓рж┐ржЦрзБржи');
        return;
    }

    // Hide initial examples section after solving any problem
    const initialExamplesDiv = document.getElementById('initialExamples');
    if (initialExamplesDiv) {
        initialExamplesDiv.style.display = 'none';
    }

    const resultDiv = document.getElementById('result');
    const solveBtn = document.getElementById('solveBtn');

    // Show result section and loading state
    resultDiv.classList.remove('hidden');
    resultDiv.innerHTML = `
        <div class="text-center py-6">
            <div class="loading-spinner mx-auto mb-3"></div>
            <p class='text-blue-600 font-medium'>рж╕ржорж╛ржзрж╛ржи ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржХрж░ржЫрзЗ...</p>
        </div>
    `;

    // Disable button during processing
    solveBtn.disabled = true;
    solveBtn.innerHTML = 'ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ржХрж░ржг...';

    fetch('ajax_solver.php', {
        method: 'POST',
        headers: {'Content-Type':'application/x-www-form-urlencoded'},
        body: 'problem=' + encodeURIComponent(problem)
    })
    .then(res => {
        if (!res.ok) {
            throw new Error('Network response was not ok');
        }
        return res.text();
    })
    .then(text => {
        try {
            const data = JSON.parse(text);

            if(!data.success || data.error){
                resultDiv.innerHTML = `
                    <div class="text-center py-6">
                        <p class='text-red-600 font-medium'>тЭМ ${data.error || 'рж╕ржорж╛ржзрж╛ржи ржХрж░рждрзЗ ржкрж╛рж░рж┐ржирж┐'}</p>
                        <p class="text-sm text-gray-500 mt-1">ржЕржирзНржп ржПржХржЯрж┐ рж╕ржорж╕рзНржпрж╛ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи</p>
                    </div>
                `;
                return;
            }

            // Create clean result HTML
            let html = `<div class="space-y-4">`;

            if(data.steps && data.steps.length > 0) {
                html += `
                    <div>
                        <h4 class='font-medium text-gray-800 mb-3'>рж╕ржорж╛ржзрж╛ржи ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛:</h4>
                        <ol class='space-y-2 text-sm'>
                `;

                data.steps.forEach((step, index) => {
                    html += `<li class='flex'><span class='font-medium mr-2'>${index + 1}.</span><span>${step}</span></li>`;
                });

                html += `</ol></div>`;
            }

            html += `
                <div class="bg-blue-50 p-4 rounded-md border border-blue-200 text-center">
                    <p class='font-bold text-xl text-blue-700'>
                        ржЙрждрзНрждрж░: ${data.bengali_answer || data.answer}
                    </p>
                </div>
            `;

            if(data.method && data.accuracy) {
                html += `
                    <div class="text-xs text-gray-500 text-center">
                        ${data.method} | ${data.accuracy}
                    </div>
                `;
            }

            html += '</div>';

            resultDiv.innerHTML = html;

            // Scroll to result
            resultDiv.scrollIntoView({ behavior: 'smooth', block: 'center' });

            // Show contextual examples
            setTimeout(() => {
                showContextualExamples(problem);
            }, 1000);

        } catch (e) {
            console.error('JSON Parse Error:', e);
            console.error('Response text:', text);
            resultDiv.innerHTML = `
                <div class="text-center py-6">
                    <p class='text-red-600 font-medium'>тЭМ рж╕рж╛рж░рзНржнрж╛рж░ ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛ ржкрж╛рж░рзНрж╕ ржХрж░рждрзЗ ржкрж╛рж░рж┐ржирж┐</p>
                </div>
            `;
        }
    })
    .catch(error => {
        console.error('Fetch Error:', error);
        resultDiv.innerHTML = `
            <div class="text-center py-6">
                <p class='text-red-600 font-medium'>тЭМ рж╕рж╛рж░рзНржнрж╛рж░ рж╕ржВржпрзЛржЧрзЗ рж╕ржорж╕рзНржпрж╛</p>
            </div>
        `;
    })
    .finally(() => {
        // Re-enable button
        solveBtn.disabled = false;
        solveBtn.innerHTML = 'рж╕ржорж╛ржзрж╛ржи ржХрж░рзБржи';
    });
}
</script>
</body>
</html>
